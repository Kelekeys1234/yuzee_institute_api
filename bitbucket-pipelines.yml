# This is a sample build configuration for Java (Maven).
# Check our guides at https://confluence.atlassian.com/x/zd-5Mw for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: atlassian/default-image:2

pipelines:
  custom:
    manual-build:
       - step:
           name: Compile
           image: maven:3.8.1
           caches:
             - maven
           script:
             - mvn -P snapshot -B -s settings.xml verify
           artifacts:
             - target/yuzee-institute.jar
             - appspec.yml
             - scripts/*
       - step:
           name: Create Zip File
           script:
             - zip -r yuzee-test-institute-app-$BITBUCKET_BUILD_NUMBER.zip target/yuzee-institute.jar
             - zip -r yuzee-test-institute-app-$BITBUCKET_BUILD_NUMBER.zip appspec.yml
             - zip -r yuzee-test-institute-app-$BITBUCKET_BUILD_NUMBER.zip scripts/*
           artifacts:
             - yuzee-test-institute-app-*.zip
       - step:
           name: Upload to S3
           services:
             - docker
           script:
             # Test upload
             - pipe: atlassian/aws-code-deploy:0.2.10
               variables:
                 AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
                 AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
                 AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
                 COMMAND: 'upload'
                 APPLICATION_NAME: ${APPLICATION_NAME}
                 ZIP_FILE: 'yuzee-test-institute-app-$BITBUCKET_BUILD_NUMBER.zip'
       - step:
           name: Deploy with CodeDeploy
           deployment: production
           services:
           - docker
           script:
           # Test upload
           - pipe: atlassian/aws-code-deploy:0.2.10
             variables:
               AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
               AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
               AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
               COMMAND: 'deploy'
               APPLICATION_NAME: ${APPLICATION_NAME}
               DEPLOYMENT_GROUP: ${DEPLOYMENT_GROUP}
               IGNORE_APPLICATION_STOP_FAILURES: 'true'
               FILE_EXISTS_BEHAVIOR: 'OVERWRITE'
               WAIT: 'true'
