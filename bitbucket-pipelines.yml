# This is a sample build configuration for Java (Maven).
# Check our guides at https://confluence.atlassian.com/x/zd-5Mw for more examples.
# Only use spaces to indent your .yml configuration.
# -----
# You can specify a custom docker image from Docker Hub as your build environment.
image: atlassian/default-image:2

pipelines:
  custom:
    manual-build:
       - step:
           name: Compile
           image: maven:3.8.1
           caches:
             - maven
           script:
             - mvn -P snapshot -B -s settings.xml verify
           artifacts:
             - target/yuzee-institute.jar
             - appspec.yml
             - scripts/*
       - step:
           name: Create Zip File
           script:
             - zip -r yuzee-test-institute-app-$BITBUCKET_BUILD_NUMBER.zip target/yuzee-institute.jar
             - zip -r yuzee-test-institute-app-$BITBUCKET_BUILD_NUMBER.zip appspec.yml
             - zip -r yuzee-test-institute-app-$BITBUCKET_BUILD_NUMBER.zip scripts/*
           artifacts:
             - yuzee-test-institute-app-*.zip
       - step:
           name: Upload to S3
           services:
             - docker
           script:
             # Test upload
             - pipe: atlassian/aws-code-deploy:0.2.10
               variables:
                 AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
                 AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
                 AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
                 COMMAND: 'upload'
                 APPLICATION_NAME: ${APPLICATION_NAME}
                 ZIP_FILE: 'yuzee-test-institute-app-$BITBUCKET_BUILD_NUMBER.zip'
       - step:
           name: Deploy with CodeDeploy
           deployment: production
           services:
           - docker
           script:
           # Test upload
           - pipe: atlassian/aws-code-deploy:0.2.10
             variables:
               AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
               AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
               AWS_DEFAULT_REGION: ${AWS_DEFAULT_REGION}
               COMMAND: 'deploy'
               APPLICATION_NAME: ${APPLICATION_NAME}
               DEPLOYMENT_GROUP: ${DEPLOYMENT_GROUP}
               IGNORE_APPLICATION_STOP_FAILURES: 'true'
               FILE_EXISTS_BEHAVIOR: 'OVERWRITE'
               WAIT: 'true'

    manual-build-kube:
    - step:
           name: Compile
           image: maven:3.8.1
           caches:
             - maven
           script: # Modify the commands below to build your repository.
             - mvn -f pom-dc.xml -P snapshot -B -s settings.xml verify -DskipTests # -B batch mode makes Maven less verbose
           artifacts:
             - target/yuzee-institute.jar
             - target/dependency-check-report.html
             
    - step: # Sending the dependency check report to email
            name: Email check report 
            script:
              - pipe: atlassian/email-notify:0.5.0
                variables:
                  USERNAME: 'maven.yuzee@gmail.com'
                  PASSWORD: $email_pass
                  FROM: 'maven.yuzee@gmail.com'
                  TO: 'distributikngroup@yuzee.com'
                  HOST: 'smtp.gmail.com'
                  PORT: 587
                  SUBJECT: 'institute-service dependency check report'
                  ATTACHMENTS: 'target/dependency-check-report.html'
    - step:
        name: Containerizing Application
        image: atlassian/pipelines-awscli
        services:
          - docker
        script: # Modify the commands below to build your repository.
          - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
          - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
          - export AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION
          - aws ecr get-login-password --region ap-southeast-1 | docker login --username AWS --password-stdin 607951638574.dkr.ecr.ap-southeast-1.amazonaws.com
          - docker build -t institute .
          - docker tag institute 607951638574.dkr.ecr.ap-southeast-1.amazonaws.com/institute:$BITBUCKET_BUILD_NUMBER
          - docker push 607951638574.dkr.ecr.ap-southeast-1.amazonaws.com/institute:$BITBUCKET_BUILD_NUMBER     
    
    
    - step:
        name: Deploy
        image: atlassian/pipelines-kubectl
        script:
          - echo $KUBE_CONFIG | base64 -d > kubeconfig.yml
          - cat kubeconfig.yml
          - kubectl --kubeconfig=kubeconfig.yml delete secret institute -n yuzee-dev || true
          - kubectl --kubeconfig=kubeconfig.yml create secret generic institute --namespace=yuzee-dev --from-literal=db_username=$db_username --from-literal=db_password=$db_password --from-literal=db_url=$db_url --from-literal=dropbox_token=$dropbox_token --from-literal=google_api_key=$google_api_key --from-literal=aws_id=$aws_id --from-literal=aws_secret=$aws_secret         
          - kubectl --kubeconfig=kubeconfig.yml delete secret regcred -n yuzee-dev || true
          - kubectl --kubeconfig=kubeconfig.yml create secret docker-registry regcred --docker-server=607951638574.dkr.ecr.ap-southeast-1.amazonaws.com --docker-username=AWS --docker-password=$value --namespace=yuzee-dev
          - cat institute-001.yaml | sed "s/{{BITBUCKET_BUILD_NUMBER}}/$BITBUCKET_BUILD_NUMBER/g" | kubectl  --kubeconfig=kubeconfig.yml apply -f -
          
          
    manual-build-rollback-deployment:
    - step:
        name: Rollback Deploment
        image: atlassian/pipelines-kubectl
        script:
          - echo $KUBE_CONFIG | base64 -d > kubeconfig.yml
          - kubectl --kubeconfig=kubeconfig.yml rollout undo deploy institute-service -n yuzee-dev
     