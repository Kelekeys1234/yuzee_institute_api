package com.yuzee.app.bean;

import java.io.Serializable;

// Generated 7 Jun, 2019 2:45:49 PM by Hibernate Tools 4.3.1

import org.springframework.data.mongodb.core.mapping.Document;

/**
 * CategorySeekaArticle generated by hbm2java
 */
@Document("category_article")
public class CategoryArticle implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 5755860681101009294L;
	private String articleId;
	private Category category;
	private int value;

	public CategoryArticle() {
	}

	public CategoryArticle(Category category, int value) {
		this.category = category;
		this.value = value;
	}

	@org.springframework.data.annotation.Id
	public String getArticleId() {
		return this.articleId;
	}

	public void setArticleId(String articleId) {
		this.articleId = articleId;
	}

	public Category getCategory() {
		return this.category;
	}

	public void setCategory(Category category) {
		this.category = category;
	}

	public int getValue() {
		return this.value;
	}

	public void setValue(int value) {
		this.value = value;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((articleId == null) ? 0 : articleId.hashCode());
		result = prime * result + ((category == null) ? 0 : category.hashCode());
		result = prime * result + value;
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		CategoryArticle other = (CategoryArticle) obj;
		if (articleId == null) {
			if (other.articleId != null)
				return false;
		} else if (!articleId.equals(other.articleId))
			return false;
		if (category == null) {
			if (other.category != null)
				return false;
		} else if (!category.equals(other.category))
			return false;
		if (value != other.value)
			return false;
		return true;
	}

	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append("CategorySeekaArticle [articleId=").append(articleId).append(", category=").append(category)
				.append(", value=").append(value).append("]");
		return builder.toString();
	}

}
