package com.seeka.app.bean;import java.math.BigInteger;

// Generated 7 Jun, 2019 2:45:49 PM by Hibernate Tools 4.3.1


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * CourseGradeEligibility generated by hbm2java
 */
@Entity
@Table(name = "course_grade_eligibility", catalog = "seeka_dev_v5")
public class CourseGradeEligibility implements java.io.Serializable {

	private BigInteger courseId;
	private Double globalGpa;
	private String globalALevel1;
	private String globalALevel2;
	private String globalALevel3;
	private String globalALevel4;
	private String globalALevel5;
	private Boolean isActive;
	private Date createdOn;
	private Date updatedOn;
	private Date deletedOn;
	private String createdBy;
	private String updatedBy;
	private Boolean isDeleted;

	public CourseGradeEligibility() {
	}

	public CourseGradeEligibility(Double globalGpa, String globalALevel1,
			String globalALevel2, String globalALevel3, String globalALevel4,
			String globalALevel5, Boolean isActive, Date createdOn,
			Date updatedOn, Date deletedOn, String createdBy, String updatedBy,
			Boolean isDeleted) {
		this.globalGpa = globalGpa;
		this.globalALevel1 = globalALevel1;
		this.globalALevel2 = globalALevel2;
		this.globalALevel3 = globalALevel3;
		this.globalALevel4 = globalALevel4;
		this.globalALevel5 = globalALevel5;
		this.isActive = isActive;
		this.createdOn = createdOn;
		this.updatedOn = updatedOn;
		this.deletedOn = deletedOn;
		this.createdBy = createdBy;
		this.updatedBy = updatedBy;
		this.isDeleted = isDeleted;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "course_id", unique = true, nullable = false)
	public BigInteger getCourseId() {
		return this.courseId;
	}

	public void setCourseId(BigInteger courseId) {
		this.courseId = courseId;
	}

	@Column(name = "global_gpa", precision = 18)
	public Double getGlobalGpa() {
		return this.globalGpa;
	}

	public void setGlobalGpa(Double globalGpa) {
		this.globalGpa = globalGpa;
	}

	@Column(name = "global_a_level_1", length = 10)
	public String getGlobalALevel1() {
		return this.globalALevel1;
	}

	public void setGlobalALevel1(String globalALevel1) {
		this.globalALevel1 = globalALevel1;
	}

	@Column(name = "global_a_level_2", length = 10)
	public String getGlobalALevel2() {
		return this.globalALevel2;
	}

	public void setGlobalALevel2(String globalALevel2) {
		this.globalALevel2 = globalALevel2;
	}

	@Column(name = "global_a_level_3", length = 10)
	public String getGlobalALevel3() {
		return this.globalALevel3;
	}

	public void setGlobalALevel3(String globalALevel3) {
		this.globalALevel3 = globalALevel3;
	}

	@Column(name = "global_a_level_4", length = 10)
	public String getGlobalALevel4() {
		return this.globalALevel4;
	}

	public void setGlobalALevel4(String globalALevel4) {
		this.globalALevel4 = globalALevel4;
	}

	@Column(name = "global_a_level_5", length = 10)
	public String getGlobalALevel5() {
		return this.globalALevel5;
	}

	public void setGlobalALevel5(String globalALevel5) {
		this.globalALevel5 = globalALevel5;
	}

	@Column(name = "is_active")
	public Boolean getIsActive() {
		return this.isActive;
	}

	public void setIsActive(Boolean isActive) {
		this.isActive = isActive;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_on", length = 19)
	public Date getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_on", length = 19)
	public Date getUpdatedOn() {
		return this.updatedOn;
	}

	public void setUpdatedOn(Date updatedOn) {
		this.updatedOn = updatedOn;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "deleted_on", length = 19)
	public Date getDeletedOn() {
		return this.deletedOn;
	}

	public void setDeletedOn(Date deletedOn) {
		this.deletedOn = deletedOn;
	}

	@Column(name = "created_by", length = 50)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Column(name = "updated_by", length = 50)
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Column(name = "is_deleted")
	public Boolean getIsDeleted() {
		return this.isDeleted;
	}

	public void setIsDeleted(Boolean isDeleted) {
		this.isDeleted = isDeleted;
	}

    /* (non-Javadoc)
     * @see java.lang.Object#hashCode()
     */
    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((courseId == null) ? 0 : courseId.hashCode());
        result = prime * result + ((createdBy == null) ? 0 : createdBy.hashCode());
        result = prime * result + ((createdOn == null) ? 0 : createdOn.hashCode());
        result = prime * result + ((deletedOn == null) ? 0 : deletedOn.hashCode());
        result = prime * result + ((globalALevel1 == null) ? 0 : globalALevel1.hashCode());
        result = prime * result + ((globalALevel2 == null) ? 0 : globalALevel2.hashCode());
        result = prime * result + ((globalALevel3 == null) ? 0 : globalALevel3.hashCode());
        result = prime * result + ((globalALevel4 == null) ? 0 : globalALevel4.hashCode());
        result = prime * result + ((globalALevel5 == null) ? 0 : globalALevel5.hashCode());
        result = prime * result + ((globalGpa == null) ? 0 : globalGpa.hashCode());
        result = prime * result + ((isActive == null) ? 0 : isActive.hashCode());
        result = prime * result + ((isDeleted == null) ? 0 : isDeleted.hashCode());
        result = prime * result + ((updatedBy == null) ? 0 : updatedBy.hashCode());
        result = prime * result + ((updatedOn == null) ? 0 : updatedOn.hashCode());
        return result;
    }

    /* (non-Javadoc)
     * @see java.lang.Object#equals(java.lang.Object)
     */
    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        CourseGradeEligibility other = (CourseGradeEligibility) obj;
        if (courseId == null) {
            if (other.courseId != null)
                return false;
        } else if (!courseId.equals(other.courseId))
            return false;
        if (createdBy == null) {
            if (other.createdBy != null)
                return false;
        } else if (!createdBy.equals(other.createdBy))
            return false;
        if (createdOn == null) {
            if (other.createdOn != null)
                return false;
        } else if (!createdOn.equals(other.createdOn))
            return false;
        if (deletedOn == null) {
            if (other.deletedOn != null)
                return false;
        } else if (!deletedOn.equals(other.deletedOn))
            return false;
        if (globalALevel1 == null) {
            if (other.globalALevel1 != null)
                return false;
        } else if (!globalALevel1.equals(other.globalALevel1))
            return false;
        if (globalALevel2 == null) {
            if (other.globalALevel2 != null)
                return false;
        } else if (!globalALevel2.equals(other.globalALevel2))
            return false;
        if (globalALevel3 == null) {
            if (other.globalALevel3 != null)
                return false;
        } else if (!globalALevel3.equals(other.globalALevel3))
            return false;
        if (globalALevel4 == null) {
            if (other.globalALevel4 != null)
                return false;
        } else if (!globalALevel4.equals(other.globalALevel4))
            return false;
        if (globalALevel5 == null) {
            if (other.globalALevel5 != null)
                return false;
        } else if (!globalALevel5.equals(other.globalALevel5))
            return false;
        if (globalGpa == null) {
            if (other.globalGpa != null)
                return false;
        } else if (!globalGpa.equals(other.globalGpa))
            return false;
        if (isActive == null) {
            if (other.isActive != null)
                return false;
        } else if (!isActive.equals(other.isActive))
            return false;
        if (isDeleted == null) {
            if (other.isDeleted != null)
                return false;
        } else if (!isDeleted.equals(other.isDeleted))
            return false;
        if (updatedBy == null) {
            if (other.updatedBy != null)
                return false;
        } else if (!updatedBy.equals(other.updatedBy))
            return false;
        if (updatedOn == null) {
            if (other.updatedOn != null)
                return false;
        } else if (!updatedOn.equals(other.updatedOn))
            return false;
        return true;
    }

    /* (non-Javadoc)
     * @see java.lang.Object#toString()
     */
    @Override
    public String toString() {
        return "CourseGradeEligibility [courseId=" + courseId + ", globalGpa=" + globalGpa + ", globalALevel1=" + globalALevel1 + ", globalALevel2=" + globalALevel2
                        + ", globalALevel3=" + globalALevel3 + ", globalALevel4=" + globalALevel4 + ", globalALevel5=" + globalALevel5 + ", isActive=" + isActive + ", createdOn="
                        + createdOn + ", updatedOn=" + updatedOn + ", deletedOn=" + deletedOn + ", createdBy=" + createdBy + ", updatedBy=" + updatedBy + ", isDeleted=" + isDeleted
                        + "]";
    }

}
