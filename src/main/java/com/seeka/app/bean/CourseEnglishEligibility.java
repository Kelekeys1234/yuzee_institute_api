package com.seeka.app.bean;import java.math.BigInteger;

// Generated 7 Jun, 2019 2:45:49 PM by Hibernate Tools 4.3.1


import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * CourseEnglishEligibility generated by hbm2java
 */
@Entity
@Table(name = "course_english_eligibility", catalog = "seeka_dev_v5")
public class CourseEnglishEligibility implements java.io.Serializable {

	private BigInteger id;
	private Course course;
	private String englishType;
	private Double reading;
	private Double writing;
	private Double speaking;
	private Double listening;
	private Double overall;
	private Boolean isActive;
	private Date createdOn;
	private Date updatedOn;
	private Date deletedOn;
	private String createdBy;
	private String updatedBy;
	private Boolean isDeleted;

	public CourseEnglishEligibility() {
	}

	public CourseEnglishEligibility(Course course) {
		this.course = course;
	}

	public CourseEnglishEligibility(Course course, String englishType,
			Double reading, Double writing, Double speaking,
			Double listening, Double overall, Boolean isActive,
			Date createdOn, Date updatedOn, Date deletedOn, String createdBy,
			String updatedBy, Boolean isDeleted) {
		this.course = course;
		this.englishType = englishType;
		this.reading = reading;
		this.writing = writing;
		this.speaking = speaking;
		this.listening = listening;
		this.overall = overall;
		this.isActive = isActive;
		this.createdOn = createdOn;
		this.updatedOn = updatedOn;
		this.deletedOn = deletedOn;
		this.createdBy = createdBy;
		this.updatedBy = updatedBy;
		this.isDeleted = isDeleted;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public BigInteger getId() {
		return this.id;
	}

	public void setId(BigInteger id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "course_id", nullable = false)
	public Course getCourse() {
		return this.course;
	}

	public void setCourse(Course course) {
		this.course = course;
	}

	@Column(name = "english_type", length = 250)
	public String getEnglishType() {
		return this.englishType;
	}

	public void setEnglishType(String englishType) {
		this.englishType = englishType;
	}

	@Column(name = "reading", precision = 10)
	public Double getReading() {
		return this.reading;
	}

	public void setReading(Double reading) {
		this.reading = reading;
	}

	@Column(name = "writing", precision = 10)
	public Double getWriting() {
		return this.writing;
	}

	public void setWriting(Double writing) {
		this.writing = writing;
	}

	@Column(name = "speaking", precision = 10)
	public Double getSpeaking() {
		return this.speaking;
	}

	public void setSpeaking(Double speaking) {
		this.speaking = speaking;
	}

	@Column(name = "listening", precision = 10)
	public Double getListening() {
		return this.listening;
	}

	public void setListening(Double listening) {
		this.listening = listening;
	}

	@Column(name = "overall", precision = 10)
	public Double getOverall() {
		return this.overall;
	}

	public void setOverall(Double overall) {
		this.overall = overall;
	}

	@Column(name = "is_active")
	public Boolean getIsActive() {
		return this.isActive;
	}

	public void setIsActive(Boolean isActive) {
		this.isActive = isActive;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_on", length = 19)
	public Date getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_on", length = 19)
	public Date getUpdatedOn() {
		return this.updatedOn;
	}

	public void setUpdatedOn(Date updatedOn) {
		this.updatedOn = updatedOn;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "deleted_on", length = 19)
	public Date getDeletedOn() {
		return this.deletedOn;
	}

	public void setDeletedOn(Date deletedOn) {
		this.deletedOn = deletedOn;
	}

	@Column(name = "created_by", length = 50)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Column(name = "updated_by", length = 50)
	public String getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(String updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Column(name = "is_deleted")
	public Boolean getIsDeleted() {
		return this.isDeleted;
	}

	public void setIsDeleted(Boolean isDeleted) {
		this.isDeleted = isDeleted;
	}

}
