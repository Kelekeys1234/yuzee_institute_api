package com.seeka.app.bean;

import static javax.persistence.GenerationType.IDENTITY;

import java.io.Serializable;
import java.math.BigInteger;

// Generated 7 Jun, 2019 2:45:49 PM by Hibernate Tools 4.3.1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * UserInfo generated by hbm2java
 */
@Entity
@Table(name = "user_info")
public class UserInfo implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -4789281712988943567L;
	private BigInteger userId;
	private String firstName;
	private String lastName;
	private String gender;
	private Date dob;
	private String countryOrgin;
	private String citizenship;
	private String emailId;
	private String password;
	private String mobileNo;
	private String skypeId;
	private String userEduInfo;
	private Date lastUpdatedDate;
	private Date signUpDate;
	private byte status;
	private String signupType;
	private String socialAccountId;
	private BigInteger preferredCountryId;
	private BigInteger preferredCityId;
	private BigInteger preferredCurrencyId;
	private String preferredCityName;
	private String preferredCurrencyName;
	private String firebaseId;

	public UserInfo() {
	}

	public UserInfo(String password, Date lastUpdatedDate, Date signUpDate, byte status) {
		this.password = password;
		this.lastUpdatedDate = lastUpdatedDate;
		this.signUpDate = signUpDate;
		this.status = status;
	}

	public UserInfo(String firstName, String lastName, String gender, Date dob, String countryOrgin, String citizenship,
			String emailId, String password, String mobileNo, String skypeId, String userEduInfo, Date lastUpdatedDate,
			Date signUpDate, byte status, String signupType, String socialAccountId, BigInteger preferredCountryId,
			BigInteger preferredCityId, BigInteger preferredCurrencyId, String preferredCityName,
			String preferredCurrencyName, String firebaseId) {
		this.firstName = firstName;
		this.lastName = lastName;
		this.gender = gender;
		this.dob = dob;
		this.countryOrgin = countryOrgin;
		this.citizenship = citizenship;
		this.emailId = emailId;
		this.password = password;
		this.mobileNo = mobileNo;
		this.skypeId = skypeId;
		this.userEduInfo = userEduInfo;
		this.lastUpdatedDate = lastUpdatedDate;
		this.signUpDate = signUpDate;
		this.status = status;
		this.signupType = signupType;
		this.socialAccountId = socialAccountId;
		this.preferredCountryId = preferredCountryId;
		this.preferredCityId = preferredCityId;
		this.preferredCurrencyId = preferredCurrencyId;
		this.preferredCityName = preferredCityName;
		this.preferredCurrencyName = preferredCurrencyName;
		this.firebaseId = firebaseId;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "user_id", unique = true, nullable = false)
	public BigInteger getUserId() {
		return this.userId;
	}

	public void setUserId(BigInteger userId) {
		this.userId = userId;
	}

	@Column(name = "first_name", length = 90)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "last_name", length = 90)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "gender", length = 45)
	public String getGender() {
		return this.gender;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "dob", length = 10)
	public Date getDob() {
		return this.dob;
	}

	public void setDob(Date dob) {
		this.dob = dob;
	}

	@Column(name = "country_orgin", length = 100)
	public String getCountryOrgin() {
		return this.countryOrgin;
	}

	public void setCountryOrgin(String countryOrgin) {
		this.countryOrgin = countryOrgin;
	}

	@Column(name = "citizenship", length = 100)
	public String getCitizenship() {
		return this.citizenship;
	}

	public void setCitizenship(String citizenship) {
		this.citizenship = citizenship;
	}

	@Column(name = "email_id", length = 90)
	public String getEmailId() {
		return this.emailId;
	}

	public void setEmailId(String emailId) {
		this.emailId = emailId;
	}

	@Column(name = "password", nullable = false, length = 200)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "mobile_no", length = 45)
	public String getMobileNo() {
		return this.mobileNo;
	}

	public void setMobileNo(String mobileNo) {
		this.mobileNo = mobileNo;
	}

	@Column(name = "skype_id", length = 100)
	public String getSkypeId() {
		return this.skypeId;
	}

	public void setSkypeId(String skypeId) {
		this.skypeId = skypeId;
	}

	@Column(name = "user_edu_info", length = 150)
	public String getUserEduInfo() {
		return this.userEduInfo;
	}

	public void setUserEduInfo(String userEduInfo) {
		this.userEduInfo = userEduInfo;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "last_updated_date", nullable = false, length = 19)
	public Date getLastUpdatedDate() {
		return this.lastUpdatedDate;
	}

	public void setLastUpdatedDate(Date lastUpdatedDate) {
		this.lastUpdatedDate = lastUpdatedDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "sign_up_date", nullable = false, length = 19)
	public Date getSignUpDate() {
		return this.signUpDate;
	}

	public void setSignUpDate(Date signUpDate) {
		this.signUpDate = signUpDate;
	}

	@Column(name = "status", nullable = false)
	public byte getStatus() {
		return this.status;
	}

	public void setStatus(byte status) {
		this.status = status;
	}

	@Column(name = "signup_type", length = 50)
	public String getSignupType() {
		return this.signupType;
	}

	public void setSignupType(String signupType) {
		this.signupType = signupType;
	}

	@Column(name = "social_account_id", length = 250)
	public String getSocialAccountId() {
		return this.socialAccountId;
	}

	public void setSocialAccountId(String socialAccountId) {
		this.socialAccountId = socialAccountId;
	}

	@Column(name = "preferred_country_id")
	public BigInteger getPreferredCountryId() {
		return this.preferredCountryId;
	}

	public void setPreferredCountryId(BigInteger preferredCountryId) {
		this.preferredCountryId = preferredCountryId;
	}

	@Column(name = "preferred_city_id")
	public BigInteger getPreferredCityId() {
		return this.preferredCityId;
	}

	public void setPreferredCityId(BigInteger preferredCityId) {
		this.preferredCityId = preferredCityId;
	}

	@Column(name = "preferred_currency_id")
	public BigInteger getPreferredCurrencyId() {
		return this.preferredCurrencyId;
	}

	public void setPreferredCurrencyId(BigInteger preferredCurrencyId) {
		this.preferredCurrencyId = preferredCurrencyId;
	}

	@Column(name = "preferred_city_name", length = 50)
	public String getPreferredCityName() {
		return this.preferredCityName;
	}

	public void setPreferredCityName(String preferredCityName) {
		this.preferredCityName = preferredCityName;
	}

	@Column(name = "preferred_currency_name", length = 50)
	public String getPreferredCurrencyName() {
		return this.preferredCurrencyName;
	}

	public void setPreferredCurrencyName(String preferredCurrencyName) {
		this.preferredCurrencyName = preferredCurrencyName;
	}

	@Column(name = "firebase_id", length = 500)
	public String getFirebaseId() {
		return this.firebaseId;
	}

	public void setFirebaseId(String firebaseId) {
		this.firebaseId = firebaseId;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see java.lang.Object#hashCode()
	 */
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((citizenship == null) ? 0 : citizenship.hashCode());
		result = prime * result + ((countryOrgin == null) ? 0 : countryOrgin.hashCode());
		result = prime * result + ((dob == null) ? 0 : dob.hashCode());
		result = prime * result + ((emailId == null) ? 0 : emailId.hashCode());
		result = prime * result + ((firebaseId == null) ? 0 : firebaseId.hashCode());
		result = prime * result + ((firstName == null) ? 0 : firstName.hashCode());
		result = prime * result + ((gender == null) ? 0 : gender.hashCode());
		result = prime * result + ((lastName == null) ? 0 : lastName.hashCode());
		result = prime * result + ((lastUpdatedDate == null) ? 0 : lastUpdatedDate.hashCode());
		result = prime * result + ((mobileNo == null) ? 0 : mobileNo.hashCode());
		result = prime * result + ((password == null) ? 0 : password.hashCode());
		result = prime * result + ((preferredCityId == null) ? 0 : preferredCityId.hashCode());
		result = prime * result + ((preferredCityName == null) ? 0 : preferredCityName.hashCode());
		result = prime * result + ((preferredCountryId == null) ? 0 : preferredCountryId.hashCode());
		result = prime * result + ((preferredCurrencyId == null) ? 0 : preferredCurrencyId.hashCode());
		result = prime * result + ((preferredCurrencyName == null) ? 0 : preferredCurrencyName.hashCode());
		result = prime * result + ((signUpDate == null) ? 0 : signUpDate.hashCode());
		result = prime * result + ((signupType == null) ? 0 : signupType.hashCode());
		result = prime * result + ((skypeId == null) ? 0 : skypeId.hashCode());
		result = prime * result + ((socialAccountId == null) ? 0 : socialAccountId.hashCode());
		result = prime * result + status;
		result = prime * result + ((userEduInfo == null) ? 0 : userEduInfo.hashCode());
		result = prime * result + ((userId == null) ? 0 : userId.hashCode());
		return result;
	}

	/*
	 * (non-Javadoc)
	 * 
	 * @see java.lang.Object#equals(java.lang.Object)
	 */
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		UserInfo other = (UserInfo) obj;
		if (citizenship == null) {
			if (other.citizenship != null)
				return false;
		} else if (!citizenship.equals(other.citizenship))
			return false;
		if (countryOrgin == null) {
			if (other.countryOrgin != null)
				return false;
		} else if (!countryOrgin.equals(other.countryOrgin))
			return false;
		if (dob == null) {
			if (other.dob != null)
				return false;
		} else if (!dob.equals(other.dob))
			return false;
		if (emailId == null) {
			if (other.emailId != null)
				return false;
		} else if (!emailId.equals(other.emailId))
			return false;
		if (firebaseId == null) {
			if (other.firebaseId != null)
				return false;
		} else if (!firebaseId.equals(other.firebaseId))
			return false;
		if (firstName == null) {
			if (other.firstName != null)
				return false;
		} else if (!firstName.equals(other.firstName))
			return false;
		if (gender == null) {
			if (other.gender != null)
				return false;
		} else if (!gender.equals(other.gender))
			return false;
		if (lastName == null) {
			if (other.lastName != null)
				return false;
		} else if (!lastName.equals(other.lastName))
			return false;
		if (lastUpdatedDate == null) {
			if (other.lastUpdatedDate != null)
				return false;
		} else if (!lastUpdatedDate.equals(other.lastUpdatedDate))
			return false;
		if (mobileNo == null) {
			if (other.mobileNo != null)
				return false;
		} else if (!mobileNo.equals(other.mobileNo))
			return false;
		if (password == null) {
			if (other.password != null)
				return false;
		} else if (!password.equals(other.password))
			return false;
		if (preferredCityId == null) {
			if (other.preferredCityId != null)
				return false;
		} else if (!preferredCityId.equals(other.preferredCityId))
			return false;
		if (preferredCityName == null) {
			if (other.preferredCityName != null)
				return false;
		} else if (!preferredCityName.equals(other.preferredCityName))
			return false;
		if (preferredCountryId == null) {
			if (other.preferredCountryId != null)
				return false;
		} else if (!preferredCountryId.equals(other.preferredCountryId))
			return false;
		if (preferredCurrencyId == null) {
			if (other.preferredCurrencyId != null)
				return false;
		} else if (!preferredCurrencyId.equals(other.preferredCurrencyId))
			return false;
		if (preferredCurrencyName == null) {
			if (other.preferredCurrencyName != null)
				return false;
		} else if (!preferredCurrencyName.equals(other.preferredCurrencyName))
			return false;
		if (signUpDate == null) {
			if (other.signUpDate != null)
				return false;
		} else if (!signUpDate.equals(other.signUpDate))
			return false;
		if (signupType == null) {
			if (other.signupType != null)
				return false;
		} else if (!signupType.equals(other.signupType))
			return false;
		if (skypeId == null) {
			if (other.skypeId != null)
				return false;
		} else if (!skypeId.equals(other.skypeId))
			return false;
		if (socialAccountId == null) {
			if (other.socialAccountId != null)
				return false;
		} else if (!socialAccountId.equals(other.socialAccountId))
			return false;
		if (status != other.status)
			return false;
		if (userEduInfo == null) {
			if (other.userEduInfo != null)
				return false;
		} else if (!userEduInfo.equals(other.userEduInfo))
			return false;
		if (userId == null) {
			if (other.userId != null)
				return false;
		} else if (!userId.equals(other.userId))
			return false;
		return true;
	}

	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append("UserInfo [userId=").append(userId).append(", firstName=").append(firstName)
				.append(", lastName=").append(lastName).append(", gender=").append(gender).append(", dob=").append(dob)
				.append(", countryOrgin=").append(countryOrgin).append(", citizenship=").append(citizenship)
				.append(", emailId=").append(emailId).append(", password=").append(password).append(", mobileNo=")
				.append(mobileNo).append(", skypeId=").append(skypeId).append(", userEduInfo=").append(userEduInfo)
				.append(", lastUpdatedDate=").append(lastUpdatedDate).append(", signUpDate=").append(signUpDate)
				.append(", status=").append(status).append(", signupType=").append(signupType)
				.append(", socialAccountId=").append(socialAccountId).append(", preferredCountryId=")
				.append(preferredCountryId).append(", preferredCityId=").append(preferredCityId)
				.append(", preferredCurrencyId=").append(preferredCurrencyId).append(", preferredCityName=")
				.append(preferredCityName).append(", preferredCurrencyName=").append(preferredCurrencyName)
				.append(", firebaseId=").append(firebaseId).append("]");
		return builder.toString();
	}

}
