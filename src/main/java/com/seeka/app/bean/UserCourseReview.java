package com.seeka.app.bean;

import static javax.persistence.GenerationType.IDENTITY;

import java.math.BigInteger;

// Generated 7 Jun, 2019 2:45:49 PM by Hibernate Tools 4.3.1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

/**
 * UserCourseReview generated by hbm2java
 */
@Entity
@Table(name = "user_course_review", catalog = "seeka_dev_v5")
public class UserCourseReview implements java.io.Serializable {

    private BigInteger id;
    private Course course;
    private Institute institute;
    private Level level;
    private UserInfo userInfo;
    private String reviewCategory;
    private String studentType;
    private String fullName;
    private Boolean isAnonymous;
    private Double lecturers;
    private Double learningMaterials;
    private Double content;
    private Double workload;
    private Double skillDevelopment;
    private Double futureStudiesCareerPalnning;
    private Double futureStudiesCareerPrepration;
    private Double overallCourseRating;
    private Double reviewStar;
    private String comments;
    private Boolean isActive;
    private Date createdOn;
    private Date updatedOn;
    private Date deletedOn;
    private String createdBy;
    private String updatedBy;
    private Boolean isDeleted;

    private Integer totalCount;

    private String country;

    private String countryLogo;

    private String userImage;

    public UserCourseReview() {
    }

    public UserCourseReview(Double lecturers, Double learningMaterials, Double content, Double workload, Double skillDevelopment, Double futureStudiesCareerPalnning,
                    Double futureStudiesCareerPrepration, Double overallCourseRating, Double reviewStar) {
        this.lecturers = lecturers;
        this.learningMaterials = learningMaterials;
        this.content = content;
        this.workload = workload;
        this.skillDevelopment = skillDevelopment;
        this.futureStudiesCareerPalnning = futureStudiesCareerPalnning;
        this.futureStudiesCareerPrepration = futureStudiesCareerPrepration;
        this.overallCourseRating = overallCourseRating;
        this.reviewStar = reviewStar;
    }

    public UserCourseReview(Course course, Institute institute, Level level, UserInfo userInfo, String reviewCategory, String studentType, String fullName, Boolean isAnonymous,
                    Double lecturers, Double learningMaterials, Double content, Double workload, Double skillDevelopment, Double futureStudiesCareerPalnning,
                    Double futureStudiesCareerPrepration, Double overallCourseRating, Double reviewStar, String comments, Boolean isActive, Date createdOn, Date updatedOn,
                    Date deletedOn, String createdBy, String updatedBy, Boolean isDeleted) {
        this.course = course;
        this.institute = institute;
        this.level = level;
        this.userInfo = userInfo;
        this.reviewCategory = reviewCategory;
        this.studentType = studentType;
        this.fullName = fullName;
        this.isAnonymous = isAnonymous;
        this.lecturers = lecturers;
        this.learningMaterials = learningMaterials;
        this.content = content;
        this.workload = workload;
        this.skillDevelopment = skillDevelopment;
        this.futureStudiesCareerPalnning = futureStudiesCareerPalnning;
        this.futureStudiesCareerPrepration = futureStudiesCareerPrepration;
        this.overallCourseRating = overallCourseRating;
        this.reviewStar = reviewStar;
        this.comments = comments;
        this.isActive = isActive;
        this.createdOn = createdOn;
        this.updatedOn = updatedOn;
        this.deletedOn = deletedOn;
        this.createdBy = createdBy;
        this.updatedBy = updatedBy;
        this.isDeleted = isDeleted;
    }

    @Id
    @GeneratedValue(strategy = IDENTITY)
    @Column(name = "id", unique = true, nullable = false)
    public BigInteger getId() {
        return this.id;
    }

    public void setId(BigInteger id) {
        this.id = id;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "course_id")
    public Course getCourse() {
        return this.course;
    }

    public void setCourse(Course course) {
        this.course = course;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "instiute_id")
    public Institute getInstitute() {
        return this.institute;
    }

    public void setInstitute(Institute institute) {
        this.institute = institute;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "level_id")
    public Level getLevel() {
        return this.level;
    }

    public void setLevel(Level level) {
        this.level = level;
    }

    @ManyToOne(fetch = FetchType.EAGER)
    @JoinColumn(name = "user_id")
    public UserInfo getUserInfo() {
        return this.userInfo;
    }

    public void setUserInfo(UserInfo userInfo) {
        this.userInfo = userInfo;
    }

    @Column(name = "review_category", length = 250)
    public String getReviewCategory() {
        return this.reviewCategory;
    }

    public void setReviewCategory(String reviewCategory) {
        this.reviewCategory = reviewCategory;
    }

    @Column(name = "student_type", length = 250)
    public String getStudentType() {
        return this.studentType;
    }

    public void setStudentType(String studentType) {
        this.studentType = studentType;
    }

    @Column(name = "full_name", length = 90)
    public String getFullName() {
        return this.fullName;
    }

    public void setFullName(String fullName) {
        this.fullName = fullName;
    }

    @Column(name = "is_anonymous")
    public Boolean getIsAnonymous() {
        return this.isAnonymous;
    }

    public void setIsAnonymous(Boolean isAnonymous) {
        this.isAnonymous = isAnonymous;
    }

    @Column(name = "lecturers", nullable = false, precision = 4)
    public Double getLecturers() {
        return this.lecturers;
    }

    public void setLecturers(Double lecturers) {
        this.lecturers = lecturers;
    }

    @Column(name = "learning_materials", nullable = false, precision = 4)
    public Double getLearningMaterials() {
        return this.learningMaterials;
    }

    public void setLearningMaterials(Double learningMaterials) {
        this.learningMaterials = learningMaterials;
    }

    @Column(name = "content", nullable = false, precision = 4)
    public Double getContent() {
        return this.content;
    }

    public void setContent(Double content) {
        this.content = content;
    }

    @Column(name = "workload", nullable = false, precision = 4)
    public Double getWorkload() {
        return this.workload;
    }

    public void setWorkload(Double workload) {
        this.workload = workload;
    }

    @Column(name = "skill_development", nullable = false, precision = 4)
    public Double getSkillDevelopment() {
        return this.skillDevelopment;
    }

    public void setSkillDevelopment(Double skillDevelopment) {
        this.skillDevelopment = skillDevelopment;
    }

    @Column(name = "future_studies_career_palnning", nullable = false, precision = 4)
    public Double getFutureStudiesCareerPalnning() {
        return this.futureStudiesCareerPalnning;
    }

    public void setFutureStudiesCareerPalnning(Double futureStudiesCareerPalnning) {
        this.futureStudiesCareerPalnning = futureStudiesCareerPalnning;
    }

    @Column(name = "future_studies_career_prepration", nullable = false, precision = 4)
    public Double getFutureStudiesCareerPrepration() {
        return this.futureStudiesCareerPrepration;
    }

    public void setFutureStudiesCareerPrepration(Double futureStudiesCareerPrepration) {
        this.futureStudiesCareerPrepration = futureStudiesCareerPrepration;
    }

    @Column(name = "overall_course_rating", nullable = false, precision = 4)
    public Double getOverallCourseRating() {
        return this.overallCourseRating;
    }

    public void setOverallCourseRating(Double overallCourseRating) {
        this.overallCourseRating = overallCourseRating;
    }

    @Column(name = "review_star", nullable = false, precision = 4)
    public Double getReviewStar() {
        return this.reviewStar;
    }

    public void setReviewStar(Double reviewStar) {
        this.reviewStar = reviewStar;
    }

    @Column(name = "comments", length = 500)
    public String getComments() {
        return this.comments;
    }

    public void setComments(String comments) {
        this.comments = comments;
    }

    @Column(name = "is_active")
    public Boolean getIsActive() {
        return this.isActive;
    }

    public void setIsActive(Boolean isActive) {
        this.isActive = isActive;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "created_on", length = 19)
    public Date getCreatedOn() {
        return this.createdOn;
    }

    public void setCreatedOn(Date createdOn) {
        this.createdOn = createdOn;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "updated_on", length = 19)
    public Date getUpdatedOn() {
        return this.updatedOn;
    }

    public void setUpdatedOn(Date updatedOn) {
        this.updatedOn = updatedOn;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name = "deleted_on", length = 19)
    public Date getDeletedOn() {
        return this.deletedOn;
    }

    public void setDeletedOn(Date deletedOn) {
        this.deletedOn = deletedOn;
    }

    @Column(name = "created_by", length = 50)
    public String getCreatedBy() {
        return this.createdBy;
    }

    public void setCreatedBy(String createdBy) {
        this.createdBy = createdBy;
    }

    @Column(name = "updated_by", length = 50)
    public String getUpdatedBy() {
        return this.updatedBy;
    }

    public void setUpdatedBy(String updatedBy) {
        this.updatedBy = updatedBy;
    }

    @Column(name = "is_deleted")
    public Boolean getIsDeleted() {
        return this.isDeleted;
    }

    public void setIsDeleted(Boolean isDeleted) {
        this.isDeleted = isDeleted;
    }

    /**
     * @return the totalCount
     */
    @Transient
    public Integer getTotalCount() {
        return totalCount;
    }

    /**
     * @param totalCount
     *            the totalCount to set
     */
    public void setTotalCount(Integer totalCount) {
        this.totalCount = totalCount;
    }

    /**
     * @return the country
     */
    @Transient
    public String getCountry() {
        return country;
    }

    /**
     * @param country
     *            the country to set
     */
    public void setCountry(String country) {
        this.country = country;
    }

    /**
     * @return the countryLogo
     */
    @Transient
    public String getCountryLogo() {
        return countryLogo;
    }

    /**
     * @param countryLogo
     *            the countryLogo to set
     */
    public void setCountryLogo(String countryLogo) {
        this.countryLogo = countryLogo;
    }

    /**
     * @return the userImage
     */
    @Transient
    public String getUserImage() {
        return userImage;
    }

    /**
     * @param userImage
     *            the userImage to set
     */
    public void setUserImage(String userImage) {
        this.userImage = userImage;
    }

}
