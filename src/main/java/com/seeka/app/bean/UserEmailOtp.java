package com.seeka.app.bean;

import static javax.persistence.GenerationType.IDENTITY;

import java.io.Serializable;
import java.math.BigInteger;

// Generated 7 Jun, 2019 2:45:49 PM by Hibernate Tools 4.3.1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * UserEmailOtp generated by hbm2java
 */
@Entity
@Table(name = "user_email_otp")
public class UserEmailOtp implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = -7068830663659819338L;
	private BigInteger id;
	private String email;
	private long otp;
	private Date otpCreatedDate;
	private Date otpExpiryDate;
	private String status;

	public UserEmailOtp() {
	}

	public UserEmailOtp(String email, long otp, Date otpCreatedDate, Date otpExpiryDate, String status) {
		this.email = email;
		this.otp = otp;
		this.otpCreatedDate = otpCreatedDate;
		this.otpExpiryDate = otpExpiryDate;
		this.status = status;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public BigInteger getId() {
		return this.id;
	}

	public void setId(BigInteger id) {
		this.id = id;
	}

	@Column(name = "email", nullable = false, length = 245)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "otp", nullable = false)
	public long getOtp() {
		return this.otp;
	}

	public void setOtp(long otp) {
		this.otp = otp;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "otp_created_date", nullable = false, length = 19)
	public Date getOtpCreatedDate() {
		return this.otpCreatedDate;
	}

	public void setOtpCreatedDate(Date otpCreatedDate) {
		this.otpCreatedDate = otpCreatedDate;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "otp_expiry_date", nullable = false, length = 19)
	public Date getOtpExpiryDate() {
		return this.otpExpiryDate;
	}

	public void setOtpExpiryDate(Date otpExpiryDate) {
		this.otpExpiryDate = otpExpiryDate;
	}

	@Column(name = "status", nullable = false, length = 245)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((email == null) ? 0 : email.hashCode());
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result + (int) (otp ^ (otp >>> 32));
		result = prime * result + ((otpCreatedDate == null) ? 0 : otpCreatedDate.hashCode());
		result = prime * result + ((otpExpiryDate == null) ? 0 : otpExpiryDate.hashCode());
		result = prime * result + ((status == null) ? 0 : status.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		UserEmailOtp other = (UserEmailOtp) obj;
		if (email == null) {
			if (other.email != null)
				return false;
		} else if (!email.equals(other.email))
			return false;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		if (otp != other.otp)
			return false;
		if (otpCreatedDate == null) {
			if (other.otpCreatedDate != null)
				return false;
		} else if (!otpCreatedDate.equals(other.otpCreatedDate))
			return false;
		if (otpExpiryDate == null) {
			if (other.otpExpiryDate != null)
				return false;
		} else if (!otpExpiryDate.equals(other.otpExpiryDate))
			return false;
		if (status == null) {
			if (other.status != null)
				return false;
		} else if (!status.equals(other.status))
			return false;
		return true;
	}

	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append("UserEmailOtp [id=").append(id).append(", email=").append(email).append(", otp=").append(otp)
				.append(", otpCreatedDate=").append(otpCreatedDate).append(", otpExpiryDate=").append(otpExpiryDate)
				.append(", status=").append(status).append("]");
		return builder.toString();
	}

}
