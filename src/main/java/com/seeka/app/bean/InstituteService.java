package com.seeka.app.bean;

import java.io.Serializable;

// Generated 7 Jun, 2019 2:45:49 PM by Hibernate Tools 4.3.1

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Index;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

import org.hibernate.annotations.GenericGenerator;

import lombok.Data;
import lombok.EqualsAndHashCode;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

/**
 * InstituteService generated by hbm2java
 */
@Entity
@Table(name = "institute_service",  uniqueConstraints = @UniqueConstraint(columnNames = { "institute_id", "service_id" } , name = "UK_INSTITUTE_ID_SERVICE_ID"),
          indexes = { @Index (name = "IDX_SERVICE_INSTITUTE_ID", columnList="institute_id", unique = false)})
@Data
@NoArgsConstructor
@Getter
@Setter
@ToString
@EqualsAndHashCode
public class InstituteService implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 7769981559211988511L;
	
	@Id
	@GenericGenerator(name = "GUID" , strategy = "org.hibernate.id.GUIDGenerator")
	@GeneratedValue(generator = "GUID")
	@Column(name = "id", unique = true, nullable = false)
	private String id;
	
	@Column(name = "institute_id", nullable = false)
	private String instituteId;
	
	@Column(name = "service_id", nullable = false)
	private String serviceId;
	
	@Column(name = "description", length = 500)
	private String description;
	
	@Column(name = "is_active")
	private Boolean isActive;
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_on", length = 19)
	private Date createdOn;
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "update_on", length = 19)
	private Date updatedOn;
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "deleted_on", length = 19)
	private Date deletedOn;
	
	@Column(name = "created_by", length = 50)
	private String createdBy;
	
	@Column(name = "updated_by", length = 50)
	private String updatedBy;
	
	@Column(name = "is_deleted")
	private Boolean isDeleted;

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "institute_id", insertable = false, updatable = false)
	private Institute institute;
	
	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "service_id", insertable = false , updatable = false)
	private Service service;
	
	public InstituteService(Institute institute, Service service) {
		this.institute = institute;
		this.service = service;
	}

	public InstituteService(Institute institute, Service service, String description, Boolean isActive, Date createdOn,
			Date updatedOn, Date deletedOn, String createdBy, String updatedBy, Boolean isDeleted) {
		super();
		this.institute = institute;
		this.service = service;
		this.description = description;
		this.isActive = isActive;
		this.createdOn = createdOn;
		this.updatedOn = updatedOn;
		this.deletedOn = deletedOn;
		this.createdBy = createdBy;
		this.updatedBy = updatedBy;
		this.isDeleted = isDeleted;
	}

	public InstituteService(String instituteId, String serviceId, Boolean isActive, Date createdOn,
			Date updatedOn, String createdBy, String updatedBy) {
		super();
		this.instituteId = instituteId;
		this.serviceId = serviceId;
		this.isActive = isActive;
		this.createdOn = createdOn;
		this.updatedOn = updatedOn;
		this.createdBy = createdBy;
		this.updatedBy = updatedBy;
	}
	
	
}
